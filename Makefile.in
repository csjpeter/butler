
# We dont want to use built in rules. Those are ineffective and we
# can never know all of them, thus those can be unexpected as well.

.SUFFIXES:

MAKEFLAGS += --no-builtin-rules --no-builtin-variables
EMPTY=
COMMA=,
SPACE=$(EMPTY) $(EMPTY)
SHELL=bash

#
#	Configuration part
#

CFLAGS=@CFLAGS@
LDFLAGS=@LDFLAGS@
LIBS=@LIBS@
STATICS=@STATICS@
DEFINES=@DEFINES@
INCLUDES=@INCLUDES@
CC=@CC@
CXX=@CXX@
CPP=@CPP@
LD=@LD@
STRIP=@STRIP@
OBJCOPY=@OBJCOPY@
MOC=@MOC@
RANLIB=@RANLIB@
PKGCONFIG=@PKGCONFIG@

#
# some tool
#

#cpp -dM /dev/null
COMPILE=$(CXX) -c $(CFLAGS) $(DEFINES) $(INCLUDES)
LINK=$(CXX) $(LDFLAGS) $^ $(STATICS) $(LIBS) -o $@
LINK_DYNAMIC=$(CXX) -shared -Wl,-as-needed -Bdynamic $(LDFLAGS) $^ $(LIBS) \
	     -Wl,-soname,$(basename $(notdir $@)) -o $@
LINK_STATIC=ar cqs $@ $^

TESTDIR=tmp/@PKGNAME@/test/

tmp/src/datamodel/test/%.opp: src/datamodel/test/%.cpp
	@test -d $(dir $@) || mkdir -p $(dir $@)
	$(COMPILE) $(DATAMODEL_INCLUDES) -DTESTDIR=\"$(TESTDIR)\" -o $@ $<

tmp/src/sqlite/test/%.opp: src/sqlite/test/%.cpp
	@test -d $(dir $@) || mkdir -p $(dir $@)
	$(COMPILE) $(DATAMODEL_INCLUDES) $(SQLITE_INCLUDES) -DTESTDIR=\"$(TESTDIR)\" -o $@ $<

tmp/src/datamodel/%.opp: src/datamodel/%.cpp
	@test -d $(dir $@) || mkdir -p $(dir $@)
	$(COMPILE) $(DATAMODEL_INCLUDES) -o $@ $<

tmp/src/sqlite/%.opp: src/sqlite/%.cpp
	@test -d $(dir $@) || mkdir -p $(dir $@)
	$(COMPILE) $(DATAMODEL_INCLUDES) $(SQLITE_INCLUDES) -o $@ $<

tmp/src/qt/%.opp: src/qt/%.cpp
	@test -d $(dir $@) || mkdir -p $(dir $@)
	$(COMPILE) $(DATAMODEL_INCLUDES) $(SQLITE_INCLUDES) $(BUTLERQT_INCLUDES) -o $@ $<

@TCROOT@@PREFIX@include/@PKGNAME@/%.h: src/%.h
	@test -d $(dir $@) || mkdir -p $(dir $@)
	cp -pd $< $@

tmp/src/qt/moc/%.opp: tmp/src/qt/moc/%.cpp
	$(TARGETINFO)
	@test -d $(dir $@) || mkdir -p $(dir $@)
	$(COMPILE) $(DATAMODEL_INCLUDES) $(SQLITE_INCLUDES) $(BUTLERQT_INCLUDES) -o $@ $<
	$(TARGETFINISHED)

tmp/src/qt/moc/%.cpp: src/qt/%.h
	$(TARGETINFO)
	@test -d $(dir $@) || mkdir -p $(dir $@)
	$(MOC) -o $@ $<
	$(TARGETFINISHED)

@TCROOT@@PREFIX@bin/% : \
	tmp/@TCROOT@@PREFIX@bin/%
	@test -d $(dir $@) || mkdir -p $(dir $@)
	cp $^ $@
	$(STRIP) --remove-section=.comment --remove-section=.note --strip-debug $@

@TCROOT@@PREFIX@lib/debug/@PREFIX@@TCROOT@bin/% : \
	tmp/@TCROOT@@PREFIX@bin/%
	@test -d $(dir $@) || mkdir -p $(dir $@)
	$(OBJCOPY) --only-keep-debug $^ $@

#
# build goals
#

TEST_BINARIES=\
	tmp/bin/test-@PKGNAME@-datamodel-dbifc \
	tmp/bin/test-@PKGNAME@-datamodel-item \
	tmp/bin/test-@PKGNAME@-datamodel-item_set \
	tmp/bin/test-@PKGNAME@-datamodel-query \
	tmp/bin/test-@PKGNAME@-datamodel-query_set \
	tmp/bin/test-@PKGNAME@-datamodel-shop \
	tmp/bin/test-@PKGNAME@-datamodel-shop_set \
	tmp/bin/test-@PKGNAME@-datamodel-tag \
	tmp/bin/test-@PKGNAME@-datamodel-tag_set \
	tmp/bin/test-@PKGNAME@-datamodel-ware \
	tmp/bin/test-@PKGNAME@-datamodel-ware_set \
	tmp/bin/test-@PKGNAME@-sqlite-item \
	tmp/bin/test-@PKGNAME@-sqlite-query \
	tmp/bin/test-@PKGNAME@-sqlite-shop \
	tmp/bin/test-@PKGNAME@-sqlite-tag \
	tmp/bin/test-@PKGNAME@-sqlite-ware

#
# temporary files
#

-include $(DATAMODEL_OBJECTS:.o=.d)

DATAMODEL_OBJECTS= \
	tmp/src/datamodel/butler_item.opp \
	tmp/src/datamodel/butler_item_set.opp \
	tmp/src/datamodel/butler_query.opp \
	tmp/src/datamodel/butler_query_set.opp \
	tmp/src/datamodel/butler_shop.opp \
	tmp/src/datamodel/butler_shop_set.opp \
	tmp/src/datamodel/butler_tag.opp \
	tmp/src/datamodel/butler_tag_set.opp \
	tmp/src/datamodel/butler_ware.opp \
	tmp/src/datamodel/butler_ware_set.opp

DATAMODEL_INCLUDES=-Isrc/datamodel

STATIC_LIBDATAMODEL=@TCROOT@@PREFIX@lib/@PRJNAME@@VERSION_API@-datamodel.a

-include $(SQLITE_OBJECTS:.o=.d)

SQLITE_OBJECTS= \
	tmp/src/sqlite/butler_sqlitedb.opp \
	tmp/src/sqlite/butler_sqlite_itembought.opp \
	tmp/src/sqlite/butler_sqlite_item.opp \
	tmp/src/sqlite/butler_sqlite_item_db.opp \
	tmp/src/sqlite/butler_sqlite_queries.opp \
	tmp/src/sqlite/butler_sqlite_queries_db.opp \
	tmp/src/sqlite/butler_sqlite_queryshops.opp \
	tmp/src/sqlite/butler_sqlite_querytags.opp \
	tmp/src/sqlite/butler_sqlite_querywares.opp \
	tmp/src/sqlite/butler_sqlite_schemaversion.opp \
	tmp/src/sqlite/butler_sqlite_shop.opp \
	tmp/src/sqlite/butler_sqlite_shop_db.opp \
	tmp/src/sqlite/butler_sqlite_sql.opp \
	tmp/src/sqlite/butler_sqlite_sqlquery.opp \
	tmp/src/sqlite/butler_sqlite_tag.opp \
	tmp/src/sqlite/butler_sqlite_tag_db.opp \
	tmp/src/sqlite/butler_sqlite_warecategories.opp \
	tmp/src/sqlite/butler_sqlite_ware.opp \
	tmp/src/sqlite/butler_sqlite_ware_db.opp \
	tmp/src/sqlite/butler_sqlite_waretags.opp

SQLITE_INCLUDES=-Isrc/sqlite

STATIC_LIBSQLITE=@TCROOT@@PREFIX@lib/@PRJNAME@@VERSION_API@-sqlite.a

-include $(BUTLERQT_OBJECTS:.o=.d)

BUTLERQT_OBJECTS= \
	tmp/src/qt/butler_accountingview.opp \
	tmp/src/qt/butler_application.opp \
	tmp/src/qt/butler_buyitemview.opp \
	tmp/src/qt/butler_config.opp \
	tmp/src/qt/butler_custommodel.opp \
	tmp/src/qt/butler_customview.opp \
	tmp/src/qt/butler_edititemview.opp \
	tmp/src/qt/butler_editshopview.opp \
	tmp/src/qt/butler_edittagview.opp \
	tmp/src/qt/butler_editwareview.opp \
	tmp/src/qt/butler_itemsmodel.opp \
	tmp/src/qt/butler_localdb.opp \
	tmp/src/qt/butler_mainview.opp \
	tmp/src/qt/butler_newitemview.opp \
	tmp/src/qt/butler_newshopview.opp \
	tmp/src/qt/butler_newtagview.opp \
	tmp/src/qt/butler_newwareview.opp \
	tmp/src/qt/butler_queryoptionsview.opp \
	tmp/src/qt/butler_shoppingmodel.opp \
	tmp/src/qt/butler_shoppingview.opp \
	tmp/src/qt/butler_shopsmodel.opp \
	tmp/src/qt/butler_shopsview.opp \
	tmp/src/qt/butler_stockmodel.opp \
	tmp/src/qt/butler_stockview.opp \
	tmp/src/qt/butler_tagfilterview.opp \
	tmp/src/qt/butler_tagsmodel.opp \
	tmp/src/qt/butler_tagsview.opp \
	tmp/src/qt/butler_tagwidget.opp \
	tmp/src/qt/butler_waresmodel.opp \
	tmp/src/qt/butler_waresview.opp \
	tmp/src/qt/main.opp \
	tmp/src/qt/moc/butler_accountingview.opp \
	tmp/src/qt/moc/butler_application.opp \
	tmp/src/qt/moc/butler_buyitemview.opp \
	tmp/src/qt/moc/butler_config.opp \
	tmp/src/qt/moc/butler_custommodel.opp \
	tmp/src/qt/moc/butler_customview.opp \
	tmp/src/qt/moc/butler_edititemview.opp \
	tmp/src/qt/moc/butler_editshopview.opp \
	tmp/src/qt/moc/butler_edittagview.opp \
	tmp/src/qt/moc/butler_editwareview.opp \
	tmp/src/qt/moc/butler_itemsmodel.opp \
	tmp/src/qt/moc/butler_localdb.opp \
	tmp/src/qt/moc/butler_mainview.opp \
	tmp/src/qt/moc/butler_newitemview.opp \
	tmp/src/qt/moc/butler_newshopview.opp \
	tmp/src/qt/moc/butler_newtagview.opp \
	tmp/src/qt/moc/butler_newwareview.opp \
	tmp/src/qt/moc/butler_queryoptionsview.opp \
	tmp/src/qt/moc/butler_shoppingmodel.opp \
	tmp/src/qt/moc/butler_shoppingview.opp \
	tmp/src/qt/moc/butler_shopsmodel.opp \
	tmp/src/qt/moc/butler_shopsview.opp \
	tmp/src/qt/moc/butler_stockmodel.opp \
	tmp/src/qt/moc/butler_stockview.opp \
	tmp/src/qt/moc/butler_tagfilterview.opp \
	tmp/src/qt/moc/butler_tagsmodel.opp \
	tmp/src/qt/moc/butler_tagsview.opp \
	tmp/src/qt/moc/butler_tagwidget.opp \
	tmp/src/qt/moc/butler_waresmodel.opp \
	tmp/src/qt/moc/butler_waresview.opp

BUTLERQT_INCLUDES=-Isrc/qt

.PRECIOUS: $(BUTLERQT_OBJECTS)

#
# main rules
#

all: \
	build \
	debian/@PKGNAME@.install

build: \
	$(STATIC_LIBDATAMODEL) \
	$(STATIC_LIBSQLITE) \
	@TCROOT@@PREFIX@lib/debug/@TCROOT@@PREFIX@bin/@PKGNAME@ \
	@TCROOT@@PREFIX@bin/@PKGNAME@

#	$(TEST_BINARIES)

clean:
	test "x" = "x$(shell find . | grep \\~$$)" || rm $(shell find . | grep \\~$$)
	test "x" = "x$(shell find . | grep \\.swp$$)" || rm $(shell find . | grep \\.swp$$)
	test "x" = "x$(shell find . | grep \\.log$$)" || rm $(shell find . | grep \\.log$$)
	! test -d tmp || rm -fr tmp
	! test -d @PREFIX@lib || rm -fr @PREFIX@lib
	! test -d @PREFIX@share || rm -fr @PREFIX@share
	! test -d @PREFIX@test || rm -fr @PREFIX@test
	! test -d @PREFIX@include || rm -fr @PREFIX@include
	test "x" = "x@PREFIX@" || { ! test -d @PREFIX@ || rmdir @PREFIX@ ; }
	! test -e Makefile || rm Makefile
	! test -e doxyfile || rm doxyfile

install: build
	test -d $(DESTDIR) || mkdir -p $(DESTDIR)
	test -d $(DESTDIR)/@PREFIX@ || mkdir -p $(DESTDIR)/@PREFIX@
	cp -pdr @TCROOT@@PREFIX@share $(DESTDIR)/@PREFIX@share
	cp -pdr @TCROOT@@PREFIX@bin $(DESTDIR)/@PREFIX@bin

check: $(TEST_BINARIES)
	@let RET=0; \
	mkdir -p $(TESTDIR); \
	for t in $(TEST_BINARIES); do \
		$$t || let RET=$$?; \
	done; \
	test $$RET -eq 0 || { \
		echo -e "\e[31m"; \
		echo "There was some failure during testing !"; \
		echo -e "\e[0m"; \
		false ; \
	}

@DOCDIR@/html/index.html: $(HEADERS)
	@test -d @DOCDIR@ || mkdir -p @DOCDIR@
	doxygen - < doxyfile

doxygen: @DOCDIR@/html/index.html

debian: FORCE
	debuild -nc

debian-src: FORCE
	debuild -S

FORCE:

#
#	build rules
#

$(STATIC_LIBDATAMODEL): \
		$(DATAMODEL_OBJECTS)
	test -d $(dir $@) || mkdir -p $(dir $@)
	$(LINK_STATIC)
	$(RANLIB) $@

$(STATIC_LIBSQLITE): \
		$(SQLITE_OBJECTS)
	test -d $(dir $@) || mkdir -p $(dir $@)
	$(LINK_STATIC)
	$(RANLIB) $@

tmp/@TCROOT@@PREFIX@bin/@PKGNAME@: \
		$(BUTLERQT_OBJECTS) \
		$(STATIC_LIBDATAMODEL) \
		$(STATIC_LIBSQLITE)
	test -d $(dir $@) || mkdir -p $(dir $@)
	$(LINK)

@TCROOT@tmp/bin/test-@PKGNAME@-datamodel-% : \
		tmp/src/datamodel/test/%.opp \
		$(STATIC_LIBDATAMODEL)
	@test -d $(dir $@) || mkdir -p $(dir $@)
	$(LINK)
#	$(CXX) $(LDFLAGS) $< $(STATICS) $(LIBS) -o $@

@TCROOT@tmp/bin/test-@PKGNAME@-sqlite-% : \
		tmp/src/sqlite/test/%.opp \
		$(STATIC_LIBSQLITE) \
		$(STATIC_LIBDATAMODEL)
	@test -d $(dir $@) || mkdir -p $(dir $@)
	$(LINK)
#	$(CXX) $(LDFLAGS) $< $(STATICS) $(LIBS) -o $@

